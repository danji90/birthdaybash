{"version":3,"sources":["components/FireWorks/FireWorks.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","fireworksContainer","position","width","height","backgroundColor","fireworksTitle","top","left","transform","color","FireWorks","classes","ref","useRef","useState","fireWorks","setFireWorks","useEffect","container","current","options","maxRockets","rocketSpawnInterval","numParticles","explosionMinHeight","explosionChance","clientWidth","clientHeight","rocketInitialPoint","FireworkCanvas","start","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIMA,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,mBAAoB,CAClBC,SAAU,WACVC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,SAEnBC,eAAgB,CACdJ,SAAU,WACVK,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,QACPL,gBAAiB,aAwCRM,MAnCf,WACE,IAAMC,EAAUd,IACVe,EAAMC,mBAFO,EAGeC,mBAAS,MAHxB,mBAGZC,EAHY,KAGDC,EAHC,KA0BnB,OArBAC,qBAAU,WACN,IAAMC,EAAYN,EAAIO,QACtB,GAAIP,EAAIO,UAAYJ,EAAW,CAC7B,IAAMK,EAAU,CACdC,WAAY,EACZC,oBAAqB,IACrBC,aAAc,IACdC,mBAAoB,GACpBC,gBAAiB,IACjBvB,MAAOgB,EAAUQ,YACjBvB,OAAQe,EAAUS,aAClBC,mBAA4C,GAAxBV,EAAUQ,aAEhCV,EAAa,IAAIa,EAAeX,EAAWE,OAE9C,CAACR,EAAKG,IAELA,GACFA,EAAUe,QAIV,qBAAKC,UAAWpB,EAAQX,mBAAoBY,IAAKA,EAAjD,SACE,qBAAKmB,UAAWpB,EAAQN,eAAxB,4BCxCS2B,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.098edcab.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport * as FireworkCanvas from 'fireworks-canvas';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fireworksContainer: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'black'\n    },\n    fireworksTitle: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      color: 'white',\n      backgroundColor: 'black'\n    }\n  }\n})\n\nfunction FireWorks() {\n  const classes = useStyles();\n  const ref = useRef();\n  const [fireWorks, setFireWorks] = useState(null);\n\n  useEffect(() => {\n      const container = ref.current;\n      if (ref.current && !fireWorks) {\n        const options = {\n          maxRockets: 5, // max # of rockets to spawn\n          rocketSpawnInterval: 500, // millisends to check if new rockets should spawn\n          numParticles: 100, // number of particles to spawn when rocket explodes (+0-10)\n          explosionMinHeight: 0.4,\n          explosionChance: 0.01, // chance in each tick the rocket will explode\n          width: container.clientWidth, // override the width, defaults to container width\n          height: container.clientHeight, // override the height, defaults to container height\n          rocketInitialPoint: container.clientWidth * 0.5,\n        }\n        setFireWorks(new FireworkCanvas(container, options))\n      }\n  }, [ref, fireWorks]);\n\n  if (fireWorks) {\n    fireWorks.start();\n  }\n\n  return (\n    <div className={classes.fireworksContainer} ref={ref}>\n      <div className={classes.fireworksTitle} >\n        Hello World\n      </div>\n    </div>\n  )\n}\n\nexport default FireWorks;\n","import './App.css';\nimport FireWorks from './components/FireWorks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FireWorks />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}