{"version":3,"sources":["components/FireWorks/FireWorks.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","fireworksContainer","position","width","height","backgroundColor","fireworksTitle","top","left","transform","color","button","FireWorks","classes","refFireworks","useRef","refCow","useState","fireWorks","setFireWorks","window","innerHeight","innerWidth","dimensions","setDimensions","useEffect","container","current","options","maxRockets","rocketSpawnInterval","numParticles","explosionMinHeight","explosionChance","clientWidth","clientHeight","rocketInitialPoint","FireworkCanvas","handleResize","canvas","document","getElementsByTagName","removeChild","addEventListener","removeEventListener","start","className","ref","Typography","src","Button","onClick","audio","play","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQAIMA,EAAYC,aAAW,SAACC,GAC5B,MAAO,CACLC,mBAAoB,CAClBC,SAAU,WACVC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,SAEnBC,eAAgB,CACdJ,SAAU,WACVK,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,QACPL,gBAAiB,SAEnBM,OAAQ,CACNN,gBAAiB,QACjB,UAAW,CACTA,gBAAiB,cAoEVO,MA1Df,WACE,IAAMC,EAAUf,IACVgB,EAAeC,mBACfC,EAASD,mBAHI,EAIeE,mBAAS,MAJxB,mBAIZC,EAJY,KAIDC,EAJC,OAKiBF,mBAAS,CAC3Cb,OAAQgB,OAAOC,YACflB,MAAOiB,OAAOE,aAPG,mBAKZC,EALY,KAKAC,EALA,KA+CnB,OArCAC,qBAAU,WACN,IAAMC,EAAYZ,EAAaa,QACzBC,EAAU,CACdC,WAAY,EACZC,oBAAqB,IACrBC,aAAc,IACdC,mBAAoB,GACpBC,gBAAiB,IACjB9B,MAAOuB,EAAUQ,YACjB9B,OAAQsB,EAAUS,aAClBC,mBAA4C,GAAxBV,EAAUQ,aAE5BpB,EAAaa,UAAYT,GAC3BC,EAAa,IAAIkB,EAAeX,EAAWE,IAG7C,IAAMU,EAAe,WACnBd,EAAc,CACZpB,OAAQgB,OAAOC,YACflB,MAAOiB,OAAOE,aAEhB,IAAMiB,EAASC,SAASC,qBAAqB,UAC7C3B,EAAaa,QAAQe,YAAYH,EAAO,IACxCpB,EAAa,OAKf,OAFAC,OAAOuB,iBAAiB,SAAUL,GAE3B,WACLlB,OAAOwB,oBAAoB,SAAUN,MAExC,CAACxB,EAAcI,EAAWK,IAEzBL,GACFA,EAAU2B,QAIV,qBAAKC,UAAWjC,EAAQZ,mBAAoB8C,IAAKjC,EAAjD,SACE,sBAAKgC,UAAWjC,EAAQP,eAAxB,UACE,cAAC0C,EAAA,EAAD,6BACA,uBAAOD,IAAK/B,EAAQiC,IAAI,mEACxB,cAACC,EAAA,EAAD,CAAQJ,UAAWjC,EAAQF,OAAQwC,QAAS,WAxDvC,IAACC,KAwDiDpC,EAAOW,UAvDzDyB,EAAMC,QAuDX,wBC1EOC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,M","file":"static/js/main.319043d9.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Button, makeStyles, Typography } from '@material-ui/core';\nimport * as FireworkCanvas from 'fireworks-canvas';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fireworksContainer: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'black'\n    },\n    fireworksTitle: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      color: 'white',\n      backgroundColor: 'black'\n    },\n    button: {\n      backgroundColor: 'white',\n      '&:hover': {\n        backgroundColor: 'white',\n      }\n    },\n  }\n})\n\nconst play = (audio) => {\n  if (audio) audio.play();\n}\n\nfunction FireWorks() {\n  const classes = useStyles();\n  const refFireworks = useRef();\n  const refCow = useRef();\n  const [fireWorks, setFireWorks] = useState(null);\n  const [dimensions, setDimensions] = useState({ \n    height: window.innerHeight,\n    width: window.innerWidth\n  })\n\n  useEffect(() => {\n      const container = refFireworks.current;\n      const options = {\n        maxRockets: 5, // max # of rockets to spawn\n        rocketSpawnInterval: 500, // millisends to check if new rockets should spawn\n        numParticles: 100, // number of particles to spawn when rocket explodes (+0-10)\n        explosionMinHeight: 0.4,\n        explosionChance: 0.01, // chance in each tick the rocket will explode\n        width: container.clientWidth, // override the width, defaults to container width\n        height: container.clientHeight, // override the height, defaults to container height\n        rocketInitialPoint: container.clientWidth * 0.5,\n      }\n      if (refFireworks.current && !fireWorks) {\n        setFireWorks(new FireworkCanvas(container, options))\n\n      }\n      const handleResize = () => {\n        setDimensions({ \n          height: window.innerHeight,\n          width: window.innerWidth\n        })\n        const canvas = document.getElementsByTagName('canvas');\n        refFireworks.current.removeChild(canvas[0]);\n        setFireWorks(null)\n      }\n  \n      window.addEventListener('resize', handleResize)\n  \n      return () => {\n        window.removeEventListener('resize', handleResize)\n      }\n  }, [refFireworks, fireWorks, dimensions]);\n\n  if (fireWorks) {\n    fireWorks.start();\n  }\n\n  return (\n    <div className={classes.fireworksContainer} ref={refFireworks}>\n      <div className={classes.fireworksTitle} >\n        <Typography>Gl√ºckwunsch</Typography>\n        <audio ref={refCow} src=\"http://www.classicalmusicproject.com/Joshuahomework/Bessie.wav\" />\n        <Button className={classes.button} onClick={() => play(refCow.current)}>Mooo</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FireWorks;\n","import './App.css';\nimport FireWorks from './components/FireWorks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FireWorks />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}